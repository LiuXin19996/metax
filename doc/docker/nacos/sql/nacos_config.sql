/*
 Navicat Premium Data Transfer

 Source Server         : 192.168.1.100mysql
 Source Server Type    : MySQL
 Source Server Version : 50743
 Source Host           : 192.168.1.100:3306
 Source Schema         : nacos_config

 Target Server Type    : MySQL
 Target Server Version : 50743
 File Encoding         : 65001

 Date: 08/01/2024 14:32:48
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 56 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (1, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'aaa73b809cfd4d0058893aa13da57806', '2020-05-20 12:00:00', '2022-04-24 10:26:34', 'nacos', '0:0:0:0:0:0:0:1', '', '', '通用配置', 'null', 'null', 'yaml', NULL, '');
INSERT INTO `config_info` VALUES (2, 'metax-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: metax-auth\n          uri: lb://metax-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: metax-gen\n          uri: lb://metax-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: metax-job\n          uri: lb://metax-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: metax-system\n          uri: lb://metax-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: metax-file\n          uri: lb://metax-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # web服务\n        - id: metax-file\n          uri: lb://metax-web\n          predicates:\n            - Path=/web/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n      - /web/message_template\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', '5aeec672cf729446132098c8367cd573', '2020-05-14 14:17:55', '2024-01-07 23:50:07', 'nacos', '192.168.1.1', '', '', '网关模块', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (3, 'metax-auth-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n', '54181b263a3c89b570f6d9c46e009764', '2020-11-20 00:00:00', '2023-11-19 20:36:32', 'nacos', '192.168.1.1', '', '', '认证中心', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (4, 'metax-monitor-dev.yml', 'DEFAULT_GROUP', '# spring\nspring:\n  security:\n    user:\n      name: metax\n      password: 123456\n  boot:\n    admin:\n      ui:\n        title: metax服务状态监控\n', '751a33c5b5c0988973853bf52be0090b', '2020-11-20 00:00:00', '2023-10-12 11:59:05', 'nacos', '192.168.1.1', '', '', '监控中心', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (5, 'metax-system-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: metax888\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: \n  licenseUrl: ', '4ea1fcb896ffe40fbf192768978e0fec', '2020-11-20 00:00:00', '2023-11-28 20:14:55', 'nacos', '192.168.1.1', '', '', '系统模块', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (6, 'metax-gen-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n    username: root\n    password: metax888\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: \n  licenseUrl: \n\n# 代码生成\ngen:\n  # 作者\n  author: hanabi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.metax.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', 'abc4262f7475a28a580d744043d32d0d', '2020-11-20 00:00:00', '2023-11-28 20:17:57', 'nacos', '192.168.1.1', '', '', '代码生成', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (8, 'metax-file-dev.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/metax/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://8.129.231.12\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://8.129.231.12:9000\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', 'a3eebb910960334e1f8fd3ac44377725', '2020-11-20 00:00:00', '2023-09-19 10:23:25', 'nacos', '192.168.1.1', '', '', '文件服务', 'null', 'null', 'yaml', '', '');
INSERT INTO `config_info` VALUES (9, 'sentinel-metax-gateway', 'DEFAULT_GROUP', '[\n    {\n        \"resource\": \"metax-auth\",\n        \"count\": 500,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"metax-system\",\n        \"count\": 1000,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    },\n	{\n        \"resource\": \"metax-gen\",\n        \"count\": 200,\n        \"grade\": 1,\n        \"limitApp\": \"default\",\n        \"strategy\": 0,\n        \"controlBehavior\": 0\n    }\n]', '30f643502a74ad850a36fba953cf97e4', '2020-11-20 00:00:00', '2023-11-28 20:19:07', 'nacos', '192.168.1.1', '', '', '限流策略', 'null', 'null', 'json', '', '');
INSERT INTO `config_info` VALUES (16, 'metax-web-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: metax888\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: metax888\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: \n    port: \n    # send from\n    username: \n    # authorization code eg: rlpadadtcugh4152e\n    password: \n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: \n  licenseUrl: \n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n    # 是否开启延迟队列 开启需要安装延迟队列插件\n    delayQueues.enabled: false\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', '7410c23412d315af1d315bccb40eab1f', '2023-09-02 02:56:43', '2024-01-08 00:31:34', 'nacos', '192.168.1.1', '', '', '系统模块', '', '', 'yaml', '', '');
INSERT INTO `config_info` VALUES (28, 'Metax-dtp-dev.yml', 'DEFAULT_GROUP', 'spring:\n  dynamic:\n    tp:\n      enabled: true\n      enabledCollect: true                   # 是否开启监控指标采集，默认false\n      collectorTypes: micrometer,logging     # 监控数据采集器类型（logging | micrometer | internal_logging），默认micrometer\n      logPath: /home/logs                    # 监控日志数据路径，默认 ${user.home}/logs，采集类型非logging不用配置\n      monitorInterval: 5                     # 监控时间间隔（报警检测、指标采集），默认5s\n      platforms:                              # 通知报警平台配置\n        # - platform: wechat\n        #   platformId: 1                            # 平台id\n        #   urlKey: 3a700-127-4bd-a798-c53d8b69c     # 替换\n        #   receivers: test1,test2                   # 接受人企微名称\n        # - platform: lark\n        #   platformId: 3\n        #   urlKey: 0d944ae7-b24a-40                 # 替换\n        #   receivers: test1,test2                   # 接受人飞书名称/openid\n        - platform: email\n          platformId: 4\n          receivers: \n      executors:                                   # 动态线程池配置，都有默认值，采用默认值的可以不配置该项，减少配置量\n        - threadPoolName: xxlDtpExecutor\n          threadPoolAliasName: xxl线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: xxl                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: smsDtpExecutor\n          threadPoolAliasName: 短信线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: sms                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: emailDtpExecutor\n          threadPoolAliasName: 邮箱线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 8\n          maximumPoolSize: 10\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: email                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 200000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 1000000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true \n        - threadPoolName: dingDingRobotDtpExecutor\n          threadPoolAliasName: 钉钉机器人线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 3\n          maximumPoolSize: 4\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: dingDingRobot                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: weChatServiceAccountDtpExecutor\n          threadPoolAliasName: 微信服务号线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: weChatServiceAccount                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: pushDtpExecutor\n          threadPoolAliasName: app通知栏线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: push                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: feiShuRobotDtpExecutor\n          threadPoolAliasName: 飞书机器人线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 3\n          maximumPoolSize: 4\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: feiShu                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n          notifyItems:                     # 报警项，不配置自动会按默认值配置（变更通知、容量报警、活性报警、拒绝报警、任务超时报警）\n            - type: capacity               # 报警项类型，查看源码 NotifyTypeEnum枚举类\n              enabled: true\n              threshold: 80                # 报警阈值\n              platforms: [email]     # 可选配置，不配置默认拿上层platforms配置的所以平台\n              interval: 120                # 报警间隔（单位：s）\n            - type: liveness\n              enabled: true\n              threshold: 80\n            - type: reject\n              enabled: true\n              threshold: 1\n            - type: run_timeout\n              enabled: true\n              threshold: 1\n            - type: queue_timeout\n              enabled: true\n              threshold: 1\n              ', '1b3f8131aee671c0286fc4980b7684e5', '2023-09-14 12:47:30', '2023-11-28 20:11:37', 'nacos', '192.168.1.1', '', '', '渠道动态线程池配置', '', '', 'yaml', '', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(64) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 106 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (28, 74, 'Metax-dtp-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  dynamic:\n    tp:\n      enabled: true\n      enabledCollect: true                   # 是否开启监控指标采集，默认false\n      collectorTypes: micrometer,logging     # 监控数据采集器类型（logging | micrometer | internal_logging），默认micrometer\n      logPath: /home/logs                    # 监控日志数据路径，默认 ${user.home}/logs，采集类型非logging不用配置\n      monitorInterval: 5                     # 监控时间间隔（报警检测、指标采集），默认5s\n      platforms:                              # 通知报警平台配置\n        # - platform: wechat\n        #   platformId: 1                            # 平台id\n        #   urlKey: 3a700-127-4bd-a798-c53d8b69c     # 替换\n        #   receivers: test1,test2                   # 接受人企微名称\n        # - platform: lark\n        #   platformId: 3\n        #   urlKey: 0d944ae7-b24a-40                 # 替换\n        #   receivers: test1,test2                   # 接受人飞书名称/openid\n        - platform: email\n          platformId: 4\n          receivers: 1666561547@qq.com,hanabizzx7880@163.com   # 收件人\n      executors:                                   # 动态线程池配置，都有默认值，采用默认值的可以不配置该项，减少配置量\n        - threadPoolName: xxlDtpExecutor\n          threadPoolAliasName: xxl线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: xxl                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: smsDtpExecutor\n          threadPoolAliasName: 短信线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: sms                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: emailDtpExecutor\n          threadPoolAliasName: 邮箱线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 8\n          maximumPoolSize: 10\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: email                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 200000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 1000000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true \n        - threadPoolName: dingDingRobotDtpExecutor\n          threadPoolAliasName: 钉钉机器人线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: dingDingRobot                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: weChatServiceAccountDtpExecutor\n          threadPoolAliasName: 微信服务号线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: weChatServiceAccount                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: pushDtpExecutor\n          threadPoolAliasName: app通知栏线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: push                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n          notifyItems:                     # 报警项，不配置自动会按默认值配置（变更通知、容量报警、活性报警、拒绝报警、任务超时报警）\n            - type: capacity               # 报警项类型，查看源码 NotifyTypeEnum枚举类\n              enabled: true\n              threshold: 80                # 报警阈值\n              platforms: [email]     # 可选配置，不配置默认拿上层platforms配置的所以平台\n              interval: 120                # 报警间隔（单位：s）\n            - type: liveness\n              enabled: true\n              threshold: 80\n            - type: reject\n              enabled: true\n              threshold: 1\n            - type: run_timeout\n              enabled: true\n              threshold: 1\n            - type: queue_timeout\n              enabled: true\n              threshold: 1\n              ', 'd2180521657eccf7855a4b17bb5b614a', '2023-11-04 20:54:59', '2023-11-04 07:54:59', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 75, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n#rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n  cacheFilePath: D:/metax/cacheFile\n\n#xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', 'da390e1ce61abf93be4ab5bff7d2555c', '2023-11-17 10:08:39', '2023-11-16 20:08:39', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 76, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n#rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n    # 死信队列配置\n    xdlExchange:\n      name: metax.xdl.exchange\n    xdlQueue:\n      name: meatx.xdl.queue\n    xdlRoutingKey:\n      key: meatx.xdl\n  cacheFilePath: D:/metax/cacheFile\n\n#xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', '2fffb51215a2cd22fc8649cee84dbc1c', '2023-11-17 10:09:37', '2023-11-16 20:09:38', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 77, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n    # 死信队列配置\n    xdlExchange:\n      name: metax.xdl.exchange\n    xdlQueue:\n      name: meatx.xdl.queue\n    xdlRoutingKey:\n      key: meatx.xdl\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', 'c394d559f363f4b186e6099dd87d6fb4', '2023-11-17 10:12:14', '2023-11-16 20:12:15', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 78, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n    # 死信队列配置\n    xdlExchange:\n      name: metax.xdl.exchange\n    xdlQueue:\n      name: meatx.xdl.queue\n    xdlRouting:\n      key: meatx.xdl\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', 'bf6a98fd9949d9d574f2f24d8ab3e0e1', '2023-11-17 19:09:50', '2023-11-17 05:09:49', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 79, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', '5d85cf8aea95597baf699063b68a899f', '2023-11-17 19:14:43', '2023-11-17 05:14:44', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (28, 80, 'Metax-dtp-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  dynamic:\n    tp:\n      enabled: true\n      enabledCollect: true                   # 是否开启监控指标采集，默认false\n      collectorTypes: micrometer,logging     # 监控数据采集器类型（logging | micrometer | internal_logging），默认micrometer\n      logPath: /home/logs                    # 监控日志数据路径，默认 ${user.home}/logs，采集类型非logging不用配置\n      monitorInterval: 5                     # 监控时间间隔（报警检测、指标采集），默认5s\n      platforms:                              # 通知报警平台配置\n        # - platform: wechat\n        #   platformId: 1                            # 平台id\n        #   urlKey: 3a700-127-4bd-a798-c53d8b69c     # 替换\n        #   receivers: test1,test2                   # 接受人企微名称\n        # - platform: lark\n        #   platformId: 3\n        #   urlKey: 0d944ae7-b24a-40                 # 替换\n        #   receivers: test1,test2                   # 接受人飞书名称/openid\n        - platform: email\n          platformId: 4\n          receivers: 1666561547@qq.com,hanabizzx7880@163.com   # 收件人\n      executors:                                   # 动态线程池配置，都有默认值，采用默认值的可以不配置该项，减少配置量\n        - threadPoolName: xxlDtpExecutor\n          threadPoolAliasName: xxl线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: xxl                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: smsDtpExecutor\n          threadPoolAliasName: 短信线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: sms                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: emailDtpExecutor\n          threadPoolAliasName: 邮箱线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 8\n          maximumPoolSize: 10\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: email                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 200000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 1000000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true \n        - threadPoolName: dingDingRobotDtpExecutor\n          threadPoolAliasName: 钉钉机器人线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 3\n          maximumPoolSize: 4\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: dingDingRobot                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: weChatServiceAccountDtpExecutor\n          threadPoolAliasName: 微信服务号线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: weChatServiceAccount                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: pushDtpExecutor\n          threadPoolAliasName: app通知栏线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: push                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: feiShuRobotDtpExecutor\n          threadPoolAliasName: 飞书机器人线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 3\n          maximumPoolSize: 4\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: feiShu                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n          notifyItems:                     # 报警项，不配置自动会按默认值配置（变更通知、容量报警、活性报警、拒绝报警、任务超时报警）\n            - type: capacity               # 报警项类型，查看源码 NotifyTypeEnum枚举类\n              enabled: true\n              threshold: 80                # 报警阈值\n              platforms: [email]     # 可选配置，不配置默认拿上层platforms配置的所以平台\n              interval: 120                # 报警间隔（单位：s）\n            - type: liveness\n              enabled: true\n              threshold: 80\n            - type: reject\n              enabled: true\n              threshold: 1\n            - type: run_timeout\n              enabled: true\n              threshold: 1\n            - type: queue_timeout\n              enabled: true\n              threshold: 1\n              ', '8ecc96a5a57f6ca7718b3c4124a72885', '2023-11-17 20:46:00', '2023-11-17 06:46:01', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 81, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', '5d85cf8aea95597baf699063b68a899f', '2023-11-20 09:58:37', '2023-11-19 19:58:37', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 82, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', 'dd327217904525aec48e6a4544aff85b', '2023-11-20 10:00:06', '2023-11-19 20:00:07', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (3, 83, 'metax-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n', '3b9179c27a5e1539eb7302e810978b40', '2023-11-20 10:07:44', '2023-11-19 20:07:44', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (2, 84, 'metax-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: metax-auth\n          uri: lb://metax-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: metax-gen\n          uri: lb://metax-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: metax-job\n          uri: lb://metax-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: metax-system\n          uri: lb://metax-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: metax-file\n          uri: lb://metax-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # web服务\n        - id: metax-file\n          uri: lb://metax-web\n          predicates:\n            - Path=/web/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', '1234aab83ddf2ebe3aa7cfb5b9377a72', '2023-11-20 10:07:53', '2023-11-19 20:07:53', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 85, 'metax-system-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', '587fe4610bbda2a33e740610912e54f5', '2023-11-20 10:08:02', '2023-11-19 20:08:03', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (6, 86, 'metax-gen-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n    username: root\n    password: austin_pwd+-\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen:\n  # 作者\n  author: hanabi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.metax.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', 'e887edc4b9fdc2af8f1bc989cdf239a3', '2023-11-20 10:08:36', '2023-11-19 20:08:37', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (7, 87, 'metax-job-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    password: 630204388\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: austin_pwd+-\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', '706e24132c58b8b0956924d12aa7a33b', '2023-11-20 10:09:01', '2023-11-19 20:09:01', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (2, 88, 'metax-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: 630204388\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: metax-auth\n          uri: lb://metax-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: metax-gen\n          uri: lb://metax-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: metax-job\n          uri: lb://metax-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: metax-system\n          uri: lb://metax-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: metax-file\n          uri: lb://metax-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # web服务\n        - id: metax-file\n          uri: lb://metax-web\n          predicates:\n            - Path=/web/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', '2283338af3612c6cdb9b8d3fa24cd459', '2023-11-20 10:36:23', '2023-11-19 20:36:24', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (3, 89, 'metax-auth-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: 630204388\n', '1d0424d80ebcfaedfeaffabb6bb3eb92', '2023-11-20 10:36:32', '2023-11-19 20:36:32', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 90, 'metax-system-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', '2aed05b6ac104a2b50fd5cad2813001f', '2023-11-20 10:36:51', '2023-11-19 20:36:52', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (7, 91, 'metax-job-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: 630204388\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: austin_pwd+-\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', '17b58199e51d22f17630a35f3f2e807e', '2023-11-20 10:37:02', '2023-11-19 20:37:03', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (6, 92, 'metax-gen-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: 630204388\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n    username: root\n    password: austin_pwd+-\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen:\n  # 作者\n  author: hanabi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.metax.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', 'ebebe1d2e588a29ecb80f92a448d2951', '2023-11-20 10:37:19', '2023-11-19 20:37:19', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 93, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: 630204388\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', 'dd327217904525aec48e6a4544aff85b', '2023-11-20 10:37:36', '2023-11-19 20:37:36', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 94, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', 'b415222086becb0adac0561964a09173', '2023-11-29 09:49:55', '2023-11-28 19:49:55', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (7, 95, 'metax-job-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: austin_pwd+-\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', 'a9a9353a4720470c5c9161a63f95b02f', '2023-11-29 09:50:14', '2023-11-28 19:50:14', NULL, '192.168.1.1', 'D', '', '');
INSERT INTO `his_config_info` VALUES (28, 96, 'Metax-dtp-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  dynamic:\n    tp:\n      enabled: true\n      enabledCollect: true                   # 是否开启监控指标采集，默认false\n      collectorTypes: micrometer,logging     # 监控数据采集器类型（logging | micrometer | internal_logging），默认micrometer\n      logPath: /home/logs                    # 监控日志数据路径，默认 ${user.home}/logs，采集类型非logging不用配置\n      monitorInterval: 5                     # 监控时间间隔（报警检测、指标采集），默认5s\n      platforms:                              # 通知报警平台配置\n        # - platform: wechat\n        #   platformId: 1                            # 平台id\n        #   urlKey: 3a700-127-4bd-a798-c53d8b69c     # 替换\n        #   receivers: test1,test2                   # 接受人企微名称\n        # - platform: lark\n        #   platformId: 3\n        #   urlKey: 0d944ae7-b24a-40                 # 替换\n        #   receivers: test1,test2                   # 接受人飞书名称/openid\n        - platform: email\n          platformId: 4\n          receivers: 1666561547@qq.com,hanabizzx7880@163.com   # 收件人\n      executors:                                   # 动态线程池配置，都有默认值，采用默认值的可以不配置该项，减少配置量\n        - threadPoolName: xxlDtpExecutor\n          threadPoolAliasName: xxl线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: xxl                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: smsDtpExecutor\n          threadPoolAliasName: 短信线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: sms                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: emailDtpExecutor\n          threadPoolAliasName: 邮箱线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 8\n          maximumPoolSize: 10\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: email                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 200000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 1000000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true \n        - threadPoolName: dingDingRobotDtpExecutor\n          threadPoolAliasName: 钉钉机器人线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 3\n          maximumPoolSize: 4\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: dingDingRobot                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: weChatServiceAccountDtpExecutor\n          threadPoolAliasName: 微信服务号线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: weChatServiceAccount                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: pushDtpExecutor\n          threadPoolAliasName: app通知栏线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 6\n          maximumPoolSize: 8\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: push                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n        - threadPoolName: feiShuRobotDtpExecutor\n          threadPoolAliasName: 飞书机器人线程池            # 线程池别名\n          executorType: common                     # 线程池类型common、eager：适用于io密集型\n          corePoolSize: 3\n          maximumPoolSize: 4\n          queueCapacity: 200\n          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类\n          rejectedHandlerType: CallerRunsPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类\n          keepAliveTime: 50\n          allowCoreThreadTimeOut: false                  # 是否允许核心线程池超时\n          threadNamePrefix: feiShu                         # 线程名前缀\n          waitForTasksToCompleteOnShutdown: true        # 参考spring线程池设计，优雅关闭线程池\n          awaitTerminationSeconds: 5                     # 单位（s）\n          preStartAllCoreThreads: false                  # 是否预热所有核心线程，默认false\n          runTimeout: 20000                                # 任务执行超时阈值，目前只做告警用，单位（ms）\n          queueTimeout: 100000                              # 任务在队列等待超时阈值，目前只做告警用，单位（ms）\n          taskWrapperNames: [\"ttl\", \"mdc\"]               # 任务包装器名称，继承TaskWrapper接口\n          notifyEnabled: true                            # 是否开启报警，默认true\n          notifyItems:                     # 报警项，不配置自动会按默认值配置（变更通知、容量报警、活性报警、拒绝报警、任务超时报警）\n            - type: capacity               # 报警项类型，查看源码 NotifyTypeEnum枚举类\n              enabled: true\n              threshold: 80                # 报警阈值\n              platforms: [email]     # 可选配置，不配置默认拿上层platforms配置的所以平台\n              interval: 120                # 报警间隔（单位：s）\n            - type: liveness\n              enabled: true\n              threshold: 80\n            - type: reject\n              enabled: true\n              threshold: 1\n            - type: run_timeout\n              enabled: true\n              threshold: 1\n            - type: queue_timeout\n              enabled: true\n              threshold: 1\n              ', '8ecc96a5a57f6ca7718b3c4124a72885', '2023-11-29 10:11:37', '2023-11-28 20:11:37', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 97, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: 630204388\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: \n  licenseUrl: \n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', 'd30d3a7bd12ed0b218e2663cff592392', '2023-11-29 10:12:11', '2023-11-28 20:12:12', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 98, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: metax888\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: metax888\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: hanabizzx@qq.com\n    # authorization code eg: rlpadadtcugh4152e\n    password: tznqsruwqyfxeijc\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: \n  licenseUrl: \n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', '59d91ec61eb668de459a848cbc0d8f90', '2023-11-29 10:12:33', '2023-11-28 20:12:33', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (6, 99, 'metax-gen-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n    username: root\n    password: austin_pwd+-\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen:\n  # 作者\n  author: hanabi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.metax.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', 'e259b9542899755b322320ae2c5ef2fa', '2023-11-29 10:14:29', '2023-11-28 20:14:30', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (5, 100, 'metax-system-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: austin_pwd+-\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', '2ada160b15fc8b68daf08c9f993bcec0', '2023-11-29 10:14:55', '2023-11-28 20:14:55', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (6, 101, 'metax-gen-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n    username: root\n    password: metax888\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen:\n  # 作者\n  author: hanabi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.metax.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '4b483762627150d6da3dbe24a2bfec3e', '2023-11-29 10:17:57', '2023-11-28 20:17:57', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (9, 102, 'sentinel-metax-gateway', 'DEFAULT_GROUP', '', '[\r\n    {\r\n        \"resource\": \"metax-auth\",\r\n        \"count\": 500,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"metax-system\",\r\n        \"count\": 1000,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"metax-gen\",\r\n        \"count\": 200,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    },\r\n	{\r\n        \"resource\": \"metax-job\",\r\n        \"count\": 300,\r\n        \"grade\": 1,\r\n        \"limitApp\": \"default\",\r\n        \"strategy\": 0,\r\n        \"controlBehavior\": 0\r\n    }\r\n]', 'b4896ab20b91cd0251c06687bfc15c8a', '2023-11-29 10:19:06', '2023-11-28 20:19:07', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 103, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: metax888\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: metax888\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: smtp.qq.com\n    port: 465\n    # send from\n    username: \n    # authorization code eg: rlpadadtcugh4152e\n    password: \n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: \n  licenseUrl: \n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', '86334538816e85f0b9f01ff5fdf42df5', '2023-11-29 10:19:43', '2023-11-28 20:19:43', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (2, 104, 'metax-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: metax-auth\n          uri: lb://metax-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: metax-gen\n          uri: lb://metax-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: metax-job\n          uri: lb://metax-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: metax-system\n          uri: lb://metax-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: metax-file\n          uri: lb://metax-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # web服务\n        - id: metax-file\n          uri: lb://metax-web\n          predicates:\n            - Path=/web/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', '83686a3b3f47dff79bed01dc2b377890', '2024-01-08 13:50:06', '2024-01-07 23:50:07', 'nacos', '192.168.1.1', 'U', '', '');
INSERT INTO `his_config_info` VALUES (16, 105, 'metax-web-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring:\n  redis:\n    host: 192.168.1.100\n    port: 6379\n    auth: metax888\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.1.100:3306/metax_cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=UTC\n            username: root\n            password: metax888\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n  rabbitmq:\n    host: 192.168.1.100\n    password: metax888\n    port: 5672\n    publisher-confirm-type: correlated\n    publisher-returns: true\n    queues: metax_queues\n    username: metax\n    virtual-host: my_host\n  \n  mail:\n    # (optional) email subject, default:ThreadPool Notify\n    title: ThreadPool Notify\n    # mail service address\n    host: \n    port: \n    # send from\n    username: \n    # authorization code eg: rlpadadtcugh4152e\n    password: \n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          socketFactoryClass: javax.net.ssl.SSLSocketFactory\n          ssl:\n            enable: true\n        debug: false\n  \n              \n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.metax.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: \n  licenseUrl: \n\nmybatis-plus:\n  configuration:\n    map-underscore-to-camel-case: true\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\n  type-aliases-package: com.metax.web.domain # 别名扫描包\n# rabbitmq自定义信息\nmetax:\n  rabbitmq:\n    # 消息队列配置\n    exchange:\n      name: metax.point\n    routing:\n      key: metax_KEY\n    topic:\n      name: metax_KEY\n    # 延迟队列配置\n    delayedExchange:\n      name: metax.delayed.exchange\n    delayedQueue:\n      name: metax.delayed.queue\n    delayedRouting:\n      key: metax.delayed\n  cacheFilePath: D:/metax/cacheFile\n\n# xxl-job配置信息\nxxl:\n  job:\n    accessToken: default_token\n    admin:\n      addresses: http://localhost:8880/xxl-job-admin\n      password: 123456\n      username: admin\n    executor:\n      appname: metax\n      jobHandlerName: metaxJob\n      port: 6666\n      ip:\n      address:\n      logpath: logs/xxl\n      logretentiondays: 30', '00f1729460f532a5159fb13c2dc16fbc', '2024-01-08 14:31:33', '2024-01-08 00:31:34', 'nacos', '192.168.1.1', 'U', '', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
